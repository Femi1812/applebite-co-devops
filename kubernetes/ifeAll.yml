apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: eks.privileged
    creationTimestamp: "2022-09-15T18:29:24Z"
    generateName: edureka-actual-5bc67f8665-
    labels:
      app.kubernetes.io/name: load-balancer-example
      pod-template-hash: 5bc67f8665
    name: edureka-actual-5bc67f8665-c7j5c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: edureka-actual-5bc67f8665
      uid: 4f1a7385-0c23-4fef-a714-6bc219f8077d
    resourceVersion: "9331"
    uid: a093fb2f-580a-4891-a8ba-a91ac553a120
  spec:
    containers:
    - image: ife1812/edureka-actual:0.0.1
      imagePullPolicy: IfNotPresent
      name: edureka-actual
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m28gf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-0-231.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-m28gf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4ac9314466d5f0dd9b145e46677c0e20983dba2486ae64786778da2bebb6f3d2
      image: ife1812/edureka-actual:0.0.1
      imageID: docker-pullable://ife1812/edureka-actual@sha256:5e82591e148a70b5e3479f2071cd3cdbd532ee0723a8503241dd841f35af4ddc
      lastState: {}
      name: edureka-actual
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-09-15T18:29:56Z"
    hostIP: 10.0.0.231
    phase: Running
    podIP: 10.0.0.162
    podIPs:
    - ip: 10.0.0.162
    qosClass: BestEffort
    startTime: "2022-09-15T18:29:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: eks.privileged
    creationTimestamp: "2022-09-15T18:29:24Z"
    generateName: edureka-actual-5bc67f8665-
    labels:
      app.kubernetes.io/name: load-balancer-example
      pod-template-hash: 5bc67f8665
    name: edureka-actual-5bc67f8665-qvsxx
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: edureka-actual-5bc67f8665
      uid: 4f1a7385-0c23-4fef-a714-6bc219f8077d
    resourceVersion: "9282"
    uid: b4cc1688-a4e4-4640-89f8-c9c466500459
  spec:
    containers:
    - image: ife1812/edureka-actual:0.0.1
      imagePullPolicy: IfNotPresent
      name: edureka-actual
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bbbn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-0-231.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7bbbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-09-15T18:29:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b62b110d4738758091e28190243814804df1bc8836f01e6eed3bdcddd7addffa
      image: ife1812/edureka-actual:0.0.1
      imageID: docker-pullable://ife1812/edureka-actual@sha256:5e82591e148a70b5e3479f2071cd3cdbd532ee0723a8503241dd841f35af4ddc
      lastState: {}
      name: edureka-actual
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-09-15T18:29:42Z"
    hostIP: 10.0.0.231
    phase: Running
    podIP: 10.0.0.216
    podIPs:
    - ip: 10.0.0.216
    qosClass: BestEffort
    startTime: "2022-09-15T18:29:24Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-09-15T18:27:23Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "8850"
    uid: fdeb34ab-a634-4593-b7e4-80fd262bb82d
  spec:
    clusterIP: 172.20.0.1
    clusterIPs:
    - 172.20.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-09-15T18:31:20Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/name: load-balancer-example
    name: my-service
    namespace: default
    resourceVersion: "9584"
    uid: 0b6ab98b-ba67-4dbb-b159-f2628f6886ed
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 172.20.73.10
    clusterIPs:
    - 172.20.73.10
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31879
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app.kubernetes.io/name: load-balancer-example
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a0b6ab98bba674dbbb159f2628f6886e-1649676298.us-east-1.elb.amazonaws.com
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"load-balancer-example"},"name":"edureka-actual","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app.kubernetes.io/name":"load-balancer-example"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"load-balancer-example"}},"spec":{"containers":[{"image":"ife1812/edureka-actual:0.0.1","name":"edureka-actual","ports":[{"containerPort":80}]}]}}}}
    creationTimestamp: "2022-09-15T18:29:24Z"
    generation: 1
    labels:
      app.kubernetes.io/name: load-balancer-example
    name: edureka-actual
    namespace: default
    resourceVersion: "9333"
    uid: c5a8b7f8-1d44-457e-a985-daed2f9c2afd
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: load-balancer-example
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: load-balancer-example
      spec:
        containers:
        - image: ife1812/edureka-actual:0.0.1
          imagePullPolicy: IfNotPresent
          name: edureka-actual
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2022-09-15T18:29:56Z"
      lastUpdateTime: "2022-09-15T18:29:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-09-15T18:29:24Z"
      lastUpdateTime: "2022-09-15T18:29:56Z"
      message: ReplicaSet "edureka-actual-5bc67f8665" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-09-15T18:29:24Z"
    generation: 1
    labels:
      app.kubernetes.io/name: load-balancer-example
      pod-template-hash: 5bc67f8665
    name: edureka-actual-5bc67f8665
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: edureka-actual
      uid: c5a8b7f8-1d44-457e-a985-daed2f9c2afd
    resourceVersion: "9332"
    uid: 4f1a7385-0c23-4fef-a714-6bc219f8077d
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/name: load-balancer-example
        pod-template-hash: 5bc67f8665
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: load-balancer-example
          pod-template-hash: 5bc67f8665
      spec:
        containers:
        - image: ife1812/edureka-actual:0.0.1
          imagePullPolicy: IfNotPresent
          name: edureka-actual
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
kind: List
metadata:
  resourceVersion: ""
